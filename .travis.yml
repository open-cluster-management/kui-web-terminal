sudo: required
services:
  - docker
  - xvfb

cache:
  apt: true
  directories:
    - "$TRAVIS_CACHE_DIR"

before_cache:
  - sudo rm -rf $TRAVIS_CACHE_DIR/selenium-standalone

notifications:
  email: false

branches:
  only:
    - master
    - /^[0-9]+\..*$/
    - /^v[0-9]+\..*$/
    - /^release-[0-9]+\..*$/

matrix:
  include:
    # --- Just linting ---
  - stage: linting
    name: "Push linting"
    os: linux
    language: node_js
    node_js:
      - "10"
    env:
      - JOBNAME=AMD64
    before_install:
      - make init
    install: 
      - make install-proxy
    script:
      - make lint-proxy
  
  # --- Integration testing ---
  - stage: test-pr
    name: "PR tests"
    if: type = pull_request
    os: linux
    dist: trusty
    language: node_js
    addons:
      chrome: stable
    node_js:
      - "10"
    env:
      - JOBNAME=AMD64 DOCKER_TAG=travis-latest
    before_install:
      - make init
      - make docker-logins
      - make download-clis
      - make download-plugins
    install:
      - make install
    before_script:
      - make webpack
      - make headless
      - make build-image
    script:
      - make tests-dev
    after_success:
      - make release
    after_failure:
      - cat client/selenium-debug.log

  # --- x86 Deploy to Artifactory ---
  - stage: build
    name: "Build x86"
    if: type = pull_request
    os: linux
    language: node_js
    node_js:
      - "10"
    env:
      - JOBNAME=AMD64 PUSH_INTEGRATION=true DOCKER_TAG=latest
    before_install:
      - make init
      - make docker-login
      - make download-clis
      - make download-plugins
    install:
      - make install
    script:
      - make webpack
      - make headless
      - make build-image
      - make release
      - make release DOCKER_TAG=latest-rhel

  # -- PPC Deploy to Artifactory ---
  - stage: test-pr
    name: "Build PPC"
    if: type = pull_request
    os: linux-ppc64le
    language: node_js
    node_js:
      - "10"
    env:
      - JOBNAME=POWER
    before_install:
      - make init
      - make docker-login
      - make download-security-middleware
    script:
      - make build-image
    after_success:
      # - make release