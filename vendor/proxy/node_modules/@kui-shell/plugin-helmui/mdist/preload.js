var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import Debug from 'debug';
const debug = Debug('plugins/kubeui/preload');
debug('loading');
import { isHeadless } from '@kui-shell/core';
export default (registrar) => __awaiter(void 0, void 0, void 0, function* () {
    if (!isHeadless()) {
        const preloader = (yield import('./non-headless-preload')).default;
        yield preloader(registrar);
    }
});
debug('finished loading');
//# sourceMappingURL=preload.js.map