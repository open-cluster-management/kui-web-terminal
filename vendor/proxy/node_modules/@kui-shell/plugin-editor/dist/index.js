"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = require("./lib/util");
exports.respondToRepl = util_1.respondToRepl;
var readonly_1 = require("./lib/readonly");
exports.lockIcon = readonly_1.lockIcon;
exports.edit = readonly_1.edit;
var file_types_1 = require("./lib/file-types");
exports.language = file_types_1.language;
exports.extension = file_types_1.extension;
var fetchers_1 = require("./lib/fetchers");
exports.fetchFile = fetchers_1.fetchFile;
exports.registerFetcher = fetchers_1.registerFetcher;
function openEditor(tab, name, options, execOptions) {
    return __awaiter(this, void 0, void 0, function* () {
        const { openEditor } = yield Promise.resolve().then(() => require('./lib/open'));
        return openEditor(tab, name, options, execOptions);
    });
}
exports.openEditor = openEditor;
//# sourceMappingURL=index.js.map