"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _pluginKubectl = require("@kui-shell/plugin-kubectl");

/*
 * Copyright 2020 IBM Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var _default = command => args => {
  if ((0, _pluginKubectl.isUsage)(args)) {
    // special case: get --help/-h
    return (0, _pluginKubectl.doHelp)(command, args);
  } else {
    // re: the usePty; oddly krew list only emits a subset of the
    // information if it sees a non-pty; so we have to force the use
    // of a pty
    // re: nameColumn; the krew list table diverges from the kubectl
    // standard, and instead uses PLUGIN as the "name" column key
    return (0, _pluginKubectl.doExecWithTable)(args, undefined, command, {
      usePty: true,
      nameColumn: 'PLUGIN',
      verb: 'krew',
      entityType: 'info'
    });
  }
};

exports.default = _default;