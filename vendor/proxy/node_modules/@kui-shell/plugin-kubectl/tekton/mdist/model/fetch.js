/*
 * Copyright 2019 IBM Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
/**
 * Get the Pipeline referenced by a PipelineRun
 *
 */
export function getPipelineFromRef(tab, run) {
    // want: Pipeline.tekton.dev rather than Pipeline, but that is much
    // slower for some reason
    return tab.REPL.qexec(`kubectl get Pipeline ${run.spec.pipelineRef.name} -o json`).catch((err) => {
        if (err.code === 404) {
            return undefined;
        }
        else {
            throw err;
        }
    });
}
/**
 * Retrieve all Tasks
 *
 */
export function getTasks(tab) {
    return __awaiter(this, void 0, void 0, function* () {
        // want Task.tekton.dev rather than Tas, but that is much slower for
        // some reason
        const list = yield tab.REPL.qexec('kubectl get Task -o json');
        return list.items;
    });
}
//# sourceMappingURL=fetch.js.map