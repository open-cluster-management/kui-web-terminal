/*
 * Copyright 2018 IBM Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import Debug from 'debug';
import { isHeadless } from '@kui-shell/core';
import fsm2graph from './fsm2graph';
import '../../web/css/static/wskflow.css';
const debug = Debug('plugins/wskflow/visualize');
/**
 * Create the wskflow visualization for the given fsm
 *
 */
export default (tab, passedFsm, container, w, h, activations, options, rule
// eslint-disable-next-line @typescript-eslint/no-explicit-any
) => __awaiter(void 0, void 0, void 0, function* () {
    if (isHeadless()) {
        return;
    }
    debug('visualize', passedFsm, options, rule);
    // create a copy - all annotations make by wskflow will not affect the original object.
    const ir = JSON.parse(JSON.stringify(passedFsm));
    debug('passfsm', JSON.stringify(passedFsm));
    debug('ir', ir);
    return fsm2graph(tab, ir, container, activations, options, rule);
});
//# sourceMappingURL=visualize.js.map