"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = registerOcProjectGet;

var _pluginKubectl = require("@kui-shell/plugin-kubectl");

/*
 * Copyright 2020 IBM Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/** Actuate a project switch by using `oc project set` */
function doSwitchViaOc(ns, args) {
  return args.REPL.pexec(`oc project ${args.REPL.encodeComponent(ns)}`);
} // we use the fetcher from 'kubectl get', and the viewTransformer from 'kubectl get namespaces'


function registerOcProjectGet(registrar) {
  const viewTransformer = _pluginKubectl.getNamespacesTransformer.bind(undefined, doSwitchViaOc);

  registrar.listen(`/${_pluginKubectl.commandPrefix}/oc/get/project`, (0, _pluginKubectl.doGet)('oc'), Object.assign({}, _pluginKubectl.defaultFlags, {
    viewTransformer
  }));
  registrar.listen(`/${_pluginKubectl.commandPrefix}/oc/get/projects`, (0, _pluginKubectl.doGet)('oc'), Object.assign({}, _pluginKubectl.defaultFlags, {
    viewTransformer
  }));
}