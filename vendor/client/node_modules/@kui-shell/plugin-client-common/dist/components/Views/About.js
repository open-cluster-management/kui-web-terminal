"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _core = require("@kui-shell/core");

var _carbonComponentsReact = require("carbon-components-react");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/*
 * Copyright 2020 IBM Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const strings = (0, _core.i18n)('client', 'about');

class About extends React.PureComponent {
  constructor(props) {
    super(props);
    this.state = {
      current: {
        nav: 0,
        tab: 0
      }
    };
  }

  configure(menuIdx) {
    return React.createElement(_carbonComponentsReact.SideNavMenu, {
      title: strings('Configure'),
      isActive: true,
      defaultExpanded: true
    }, React.createElement(_carbonComponentsReact.SideNavMenuItem, {
      href: "#" // needed for tab navigation
      ,
      key: 0,
      "data-mode": 'theme',
      isActive: this.state.current.nav === menuIdx && this.state.current.tab === 0,
      onClick: () => {
        this.setState({
          current: {
            nav: menuIdx,
            tab: 0
          }
        });
      }
    }, React.createElement("span", {
      className: "kui--mode-placeholder",
      "data-mode": "theme"
    }, strings('Theme'))));
  }

  render() {
    return React.createElement(_carbonComponentsReact.SideNav, Object.assign({
      "aria-label": "Side navigation"
    }, this.props, {
      isChildOfHeader: true,
      isFixedNav: true
    }), React.createElement(_carbonComponentsReact.SideNavItems, null, this.configure(0)));
  }

}

exports.default = About;