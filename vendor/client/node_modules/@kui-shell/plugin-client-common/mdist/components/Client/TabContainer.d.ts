import * as React from 'react';
import TabModel from './TabModel';
import { TabContentOptions } from './TabContent';
import { TopTabStripeConfiguration } from './TopTabStripe';
import '../../../web/css/static/TabContainer.scss';
/**
 *
 * TabContainer
 * ----------------
 * | TopTabStripe |
 * |--------------|
 * |              |
 * | TabContent[] |
 * |              |
 * ----------------
 *
 */
declare type TabContainerOptions = TabContentOptions;
declare type Props = TabContainerOptions & TopTabStripeConfiguration;
interface State {
    /** list of current tabs; one TabContent for each */
    tabs: TabModel[];
    /** current active tab index */
    activeIdx: number;
}
export default class TabContainer extends React.PureComponent<Props, State> {
    constructor(props: Props);
    /** temporary hack to regrab focus to the repl */
    private hackFocus;
    /** save tab state such as CWD prior to a tab switch */
    private captureState;
    /** restore tab state after a tab switch */
    private restoreState;
    /**
     * Switch Tab event: update state so that activeIdx=idx
     *
     */
    private onSwitchTab;
    /**
     * Close Tab event
     *
     */
    private onCloseTab;
    private listenForTabClose;
    private newTabModel;
    /**
     * New Tab event
     *
     */
    private onNewTab;
    /**
     * Search component. We only want this live in electron builds,
     * because the Search.tsx code imports 'electron'. So 1) hide behind
     * React.lazy; and 2) we still need an empty shim for non-electron
     * mode.
     *
     */
    private search;
    private graft;
    /** Graft the tab `uuid` */
    private children;
    private willUpdateTopTabButtons;
    render(): JSX.Element;
}
export {};
