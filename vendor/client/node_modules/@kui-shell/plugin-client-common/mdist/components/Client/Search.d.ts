import * as React from 'react';
import { FoundInPageResult } from 'electron';
import '../../../web/css/static/Search.scss';
declare type Props = {};
interface State {
    isActive: boolean;
    result: FoundInPageResult;
}
export default class Search extends React.PureComponent<Props, State> {
    private _input;
    constructor(props: Props);
    private initEvents;
    /** stop findInPage, and clear selections in page */
    private stopFindInPage;
    private onChange;
    /**
     * This bit of ugliness works around us not using a proper
     * webview to encapsulate the <input> element; without this
     * encapsulation, chrome does some funky things with
     * focus. For example, when there is no text found, the
     * input element oddly ... maintains focus but is not
     * typeable until a global refresh. Weird. This also has the
     * nice side-effect of (albeit with a small visual glitch)
     * having no yellow/red highlight text around the text
     * inside the input element.
     *
     */
    private hack;
    private doFocus;
    /** Summarize results of find, e.g. "3 of 3" */
    private matchCount;
    render(): JSX.Element;
}
export {};
