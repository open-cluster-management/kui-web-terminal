import * as React from 'react';
import { NativeImage } from 'electron';
import '../../../web/css/static/Screenshot.scss';
declare type Props = {};
interface State {
    /** if the user has clicked the screenshot button an even or odd number of times */
    isActive: boolean;
    /** content of captured image */
    captured?: NativeImage;
    /** remember location of user's Desktop */
    desktop?: string;
}
export default class Screenshot extends React.PureComponent<Props, State> {
    private overlayCleaner;
    private cleaners;
    /** @see https://github.com/IBM/kui/issues/4170 */
    private renderOverlayTransparent;
    private toggleOverlayTransparency;
    constructor(props: Props);
    /** Transition back to a normal state, where are aren't ready to capture a screenshot */
    private deactivate;
    /** User has clicked on a region to be captured */
    private onClickScreenshotRegion;
    /**
     * This is the actual work to screenshot a given region of the
     * screen defined by the extent of the given dom.
     *
     */
    private captureRegion;
    /** Transition to a state where we are ready to capture a screenshot */
    private activate;
    /** Number to css "px" */
    private px;
    /** Wrap a given dom Element so that it is screenshotable */
    private wrap;
    /** User has clicked on the Save to Desktop button */
    private saveToDisk;
    /** Inside of the ToastNotification, render a Save to Desktop button */
    private saveToDiskButton;
    private closeNotification;
    /** Render a ToastNotification to tell the user what we captured */
    private notification;
    /** User has clicked on the screenshot button */
    private onScreenshotButtonClick;
    /** Render the screenshot button */
    render(): JSX.Element;
}
export {};
