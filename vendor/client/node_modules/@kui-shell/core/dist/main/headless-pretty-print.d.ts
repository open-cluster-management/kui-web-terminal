/// <reference types="node" />
import { Writable } from 'stream';
import * as colors from 'colors/safe';
import { Row } from '../webapp/models/table';
import { Entity } from '../models/entity';
export declare const setGraphicalShellIsOpen: () => void;
export declare const print: (msg: string | number | boolean | import("../models/entity").MetadataBearing<void> | HTMLElement | import("../models/entity").MessageBearingEntity | Error | import("../models/entity").ResourceModification | import("..").CustomResponse<void> | import("../models/entity").MixedResponse | import("..").MultiModalResponse<import("../models/entity").MetadataBearing<void>> | import("../models/entity").LowLevelLoop | import("..").UsageModel | import("../webapp/models/table").Table<Row> | import("../models/entity").RawResponse<void> | Promise<Entity<void, Row, import("../models/entity").MetadataBearing<void>>>, logger?: {
    (message?: any, ...optionalParams: any[]): void;
    (message?: any, ...optionalParams: any[]): void;
}, stream?: Writable, colorFn?: typeof colors.reset, ok?: string) => void | Promise<void>;
