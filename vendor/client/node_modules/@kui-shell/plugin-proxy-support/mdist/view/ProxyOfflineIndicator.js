/*
 * Copyright 2020 IBM Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import * as React from 'react';
import { eventChannelUnsafe, inBrowser } from '@kui-shell/core';
import { Icons, TextWithIconWidget } from '@kui-shell/plugin-client-common';
import { proxyServer } from '@kui-shell/client/config.d/proxy.json';
/** class designation for our offline indicator */
const buttonDesignation = 'kui--plugin-bash-like--pty-offline-indicator';
export default class ProxyOfflineIndicator extends React.PureComponent {
    constructor(props) {
        super(props);
        const proxyEnabled = !proxyServer['enabled'] || proxyServer['enabled'] !== false;
        this.state = {
            proxyEnabled,
            offline: true
        };
        eventChannelUnsafe.on('/proxy/online', () => this.setState({ offline: false }));
        eventChannelUnsafe.on('/proxy/offline', () => this.setState({ offline: true }));
    }
    /** If the proxy is enabled, and we are offline, then render a widget indicating such. */
    render() {
        if (!this.state.proxyEnabled || !this.state.offline || !inBrowser()) {
            return React.createElement(React.Fragment, null);
        }
        else {
            return (React.createElement(TextWithIconWidget, { text: "", viewLevel: "error", id: buttonDesignation },
                React.createElement(Icons, { icon: "Network" })));
        }
    }
}
//# sourceMappingURL=ProxyOfflineIndicator.js.map