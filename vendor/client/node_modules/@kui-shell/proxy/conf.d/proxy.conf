map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

server {
  listen 80 default_server;
  listen [::]:80 default_server;

  root /usr/share/nginx/html;

  location / {
    gzip_static on;
  }

  # serving up the client
  location /index.html {
    add_header Set-Cookie KUI_PROXY_COHOSTED=true;

    # Inject CSP nonce. We use the nginx request_id as our nonce.
    set $cspNonce "$request_id";
    sub_filter_once off;
    sub_filter_types *;
    sub_filter kuiDefaultNonce $cspNonce;

    # opengraph properties
    # twitter card properties
    sub_filter <head> '<head><meta property="og:type" content="website" />
    <meta property="og:url" content="http://kui.tools" />
    <meta property="og:site_name" content="Kui" />
    <meta property="og:title" content="Kui: The CLI with a GUI twist" />
    <meta property="og:description" content="Kui is a platform for enhancing the terminal experience with visualizations. It provides users a modern alternative to ASCII terminals and web-based consoles. It provides tool developers an opportunity to unify these experiences." />
    <meta property="og:image" content="https://raw.githubusercontent.com/IBM/kui/master/docs/readme/images/kui-experience.gif" />

    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:url" content="http://kui.tools" />
    <meta name="twitter:description" content="Kui is a platform for enhancing the terminal experience with visualizations. It provides users a modern alternative to ASCII terminals and web-based consoles. It provides tool developers an opportunity to unify these experiences." />
    <meta name="twitter:image" content="https://raw.githubusercontent.com/IBM/kui/master/docs/readme/images/kui-experience.gif" />
    <meta name="twitter:label1" value="Clone on GitHub" />
    <meta name="twitter:data1" value="https://github.com/IBM/kui" />
    <meta name="twitter:label2" value="Developer Guide" />
    <meta name="twitter:data2" value="https://github.com/IBM/kui/wiki" />';

    # ContentSecurityPolicy
    add_header Content-Security-Policy "default-src 'self' ws: wss: 'nonce-$cspNonce'; style-src 'self' 'unsafe-inline'; script-src 'self' 'nonce-$cspNonce' 'unsafe-eval' 'strict-dynamic';" always;
  }

  # /exec is sent to the kui proxy; this is websocket initiation
  location /exec {
    proxy_pass http://localhost:3000;
    proxy_http_version 1.1;  
  }

  # /bash is sent to the kui proxy; these are websocket communications
  location /bash {
    proxy_pass http://localhost:3000;
    proxy_http_version 1.1;  
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
  }

  # You may need this to prevent return 404 recursion.
  location = /404.html {
    internal;
  }
}
