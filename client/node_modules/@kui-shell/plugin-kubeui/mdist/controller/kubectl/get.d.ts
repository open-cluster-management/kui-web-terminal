import { Arguments, Registrar, MultiModalResponse } from '@kui-shell/core';
import { RawResponse } from './response';
import { KubeResource } from '../../lib/model/resource';
import { KubeOptions } from './options';
import { KubeTableResponse } from '../../lib/view/formatTable';
export declare function doGetAsTable(args: Arguments<KubeOptions>, response: RawResponse, verb?: string): KubeTableResponse;
export declare function doGetAsEntity(args: Arguments<KubeOptions>, response: RawResponse): Promise<MultiModalResponse<KubeResource>>;
export declare function rawGet(args: Arguments<KubeOptions>, command?: string): Promise<RawResponse>;
export declare const doGet: (command: string) => (args: Arguments<KubeOptions>) => Promise<string | import("@kui-shell/core").MixedResponse | KubeResource<import("../../lib/model/resource").KubeStatus> | import("@kui-shell/core").Table<import("@kui-shell/core").Row>>;
declare const _default: (commandTree: Registrar) => void;
export default _default;
