import { Entity } from '../../models/entity';
import { Row } from '../models/table';
export interface Watchable {
    watch: Poller | Pusher;
}
export declare type Poller = Partial<Toggleable> & {
    refreshCommand: string;
    watchInterval?: number;
    watchLimit?: number;
};
interface Toggleable {
    watchByDefault: boolean;
}
export interface Pusher {
    init: (update: WatchedRowHasUpdate, offline: WactchedRowisOffline) => void;
}
declare type WatchedRowHasUpdate = (response: Row) => void;
declare type WactchedRowisOffline = (rowKey: string) => void;
export declare function isPusher(model: Poller | Pusher): model is Pusher;
export declare function isWatchable(model: Entity & Partial<Watchable>): model is Entity & Watchable;
export {};
