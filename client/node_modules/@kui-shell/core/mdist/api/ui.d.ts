import * as CLI from '../webapp/cli';
import * as Inject from '../webapp/util/inject';
import * as Dom from '../webapp/util/dom';
import * as Sidecar from '../webapp/views/sidecar';
import * as ModeManager from '../webapp/bottom-stripe';
import * as ModeRegistrar from '../webapp/views/registrar/modes';
import * as BadgeRegistrar from '../webapp/views/registrar/badges';
import _Presentation from '../webapp/views/presentation';
import * as keys from '../webapp/keys';
import * as Time from '../webapp/util/time';
import formatAsPty from '../webapp/util/pretty-print';
import * as _Editor from '../webapp/views/registrar/editors';
import * as _TopTabs from '../webapp/views/top-tabs';
import * as _ToolbarText from '../webapp/views/toolbar-text';
import * as MMR from '../models/mmr/types';
import * as _Themes from '../webapp/themes';
import * as Tabs from '../webapp/tab';
import * as Block from '../webapp/block';
import * as Prompt from '../webapp/prompt';
import * as Scroll from '../webapp/scroll';
import * as PromptForInput from '../webapp/prompt-for-input';
export declare namespace UI {
    export import Tab = Tabs.Tab;
    export import injectCSS = Inject.injectCSS;
    export import uninjectCSS = Inject.uninjectCSS;
    export import injectScript = Inject.injectScript;
    export import loadHTML = Inject.loadHTML;
    export import empty = Dom.removeAllDomChildren;
    export import MultiModalResponse = MMR.MultiModalResponse;
    export import MultiModalMode = MMR.Mode;
    export import Mode = ModeManager.SidecarMode;
    export import ModeRegistration = ModeRegistrar.ModeRegistration;
    export import ModeFilter = ModeRegistrar.SidecarModeFilter;
    export import registerMode = ModeRegistrar.registerSidecarMode;
    export import registerModeWhen = ModeRegistrar.registerModeWhen;
    export import Badge = Sidecar.Badge;
    export import BadgeSpec = Sidecar.BadgeSpec;
    export import BadgeRegistration = BadgeRegistrar.BadgeRegistration;
    export import registerBadge = BadgeRegistrar.registerSidecarBadge;
    export import Themes = _Themes;
    export import ToolbarText = _ToolbarText.ToolbarTextImpl;
    export import TopTabs = _TopTabs;
    namespace Editor {
        export import Provider = _Editor.EditorProvider;
        export import registerProvider = _Editor.registerEditor;
    }
    export import Presentation = _Presentation;
    export import isPopup = CLI.isPopup;
    export import getCurrentPrompt = Prompt.getCurrentPrompt;
    export import getCurrentBlock = Block.getCurrentBlock;
    namespace PrettyPrinters {
        export import time = Time.prettyPrintTime;
        const ansi: typeof formatAsPty;
    }
    namespace Keys {
        export import Codes = keys.keys;
        export import isCursorMovement = keys.isCursorMovement;
    }
    const closeAllViews: (tab: Tab) => void;
    namespace LowLevel {
        export import prompt = PromptForInput.prompt;
        export import partialInput = Prompt.partial;
        export import scrollIntoView = Scroll.scrollIntoView;
        export import doCancel = CLI.doCancel;
        export import isUsingCustomPrompt = Prompt.isUsingCustomPrompt;
    }
}
export { Tabs };
export default UI;
