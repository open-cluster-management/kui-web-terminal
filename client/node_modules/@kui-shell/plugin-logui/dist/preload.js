"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("@kui-shell/core");
const logs_1 = require("./modes/logs");
const previous_1 = require("./modes/previous");
const stack_trace_1 = require("./modes/stack-trace");
const error_verbose_1 = require("./modes/error-verbose");
const show_logs_1 = require("./modes/show-logs");
const level_badge_1 = require("./modes/level-badge");
const scope_badge_1 = require("./modes/scope-badge");
exports.default = (registrar) => __awaiter(void 0, void 0, void 0, function* () {
    if (!core_1.isHeadless()) {
        registrar.registerModes(logs_1.default, previous_1.default, stack_trace_1.default, error_verbose_1.default, show_logs_1.default);
        registrar.registerBadges(level_badge_1.default, scope_badge_1.default);
    }
});
//# sourceMappingURL=preload.js.map