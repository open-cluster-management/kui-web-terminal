"use strict";
/*******************************************************************************
* Licensed Materials - Property of IBM
* (c) Copyright IBM Corporation 2019. All Rights Reserved.
*
* Note to U.S. Government Users Restricted Rights:
* Use, duplication or disclosure restricted by GSA ADP Schedule
* Contract with IBM Corp.
*******************************************************************************/
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
exports.__esModule = true;
var core_1 = require("@kui-shell/core");
var config_1 = require("./lib/shared/config");
var HTTPClient_1 = require("./src-web/controller/HTTPClient");
var pluginState_1 = require("./pluginState");
var lodash = require("lodash");
var search_queries_1 = require("./src-web/definitions/search-queries");
// Register searchBarWrapper
var registerCapability = function () { return __awaiter(void 0, void 0, void 0, function () {
    var _a, _b, listen, InputWrapper, stripe, prompt_1;
    return __generator(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = core_1.inBrowser();
                if (!_a) return [3 /*break*/, 2];
                return [4 /*yield*/, config_1["default"]()];
            case 1:
                _a = (_c.sent()).env !== 'development';
                _c.label = 2;
            case 2:
                if (_a) {
                    // Get user token from browser
                    fetch('/multicloud/search')
                        .then(function (page) { return page.text(); })
                        .then(function (data) {
                        var dom = new DOMParser().parseFromString(data, 'text/html');
                        var access = dom.querySelector('#app-access');
                        document.querySelector('body').appendChild(access);
                    });
                }
                HTTPClient_1["default"]('get', 'svc', undefined)
                    .then(function (res) {
                    pluginState_1.setPluginState('enabled', (res && (res === 'true' || res === true)));
                    if (pluginState_1.getPluginState().enabled) {
                        HTTPClient_1["default"]('post', 'search', search_queries_1.GET_SEARCH_SCHEMA)
                            .then(function (resp) {
                            pluginState_1.setPluginState('searchSchema', lodash.get(resp, 'data.searchSchema.allProperties', ''));
                        })["catch"](function (err) {
                            pluginState_1.setPluginState('error', err);
                        });
                    }
                })["catch"](function (err) {
                    pluginState_1.setPluginState('enabled', false);
                    pluginState_1.setPluginState('error', err);
                });
                if (!!core_1.isHeadless()) return [3 /*break*/, 5];
                return [4 /*yield*/, Promise.all([
                        Promise.resolve().then(function () { return require('@kui-shell/core/mdist/webapp/cli'); }),
                        Promise.resolve().then(function () { return require('./src-web/components/InputWrapper'); })
                    ])];
            case 3:
                _b = __read.apply(void 0, [_c.sent(), 2]), listen = _b[0].listen, InputWrapper = _b[1].InputWrapper;
                stripe = document.querySelector('.kui--input-stripe');
                return [4 /*yield*/, InputWrapper(stripe)];
            case 4:
                _c.sent();
                prompt_1 = document.querySelector('.repl-block .repl-input input');
                listen(prompt_1);
                _c.label = 5;
            case 5: return [2 /*return*/];
        }
    });
}); };
exports["default"] = registerCapability;
