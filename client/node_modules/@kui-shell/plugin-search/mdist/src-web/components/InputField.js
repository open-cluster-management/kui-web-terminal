"use strict";
/*******************************************************************************
* Licensed Materials - Property of IBM
* (c) Copyright IBM Corporation 2019. All Rights Reserved.
*
* Note to U.S. Government Users Restricted Rights:
* Use, duplication or disclosure restricted by GSA ADP Schedule
* Contract with IBM Corp.
*******************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
exports.__esModule = true;
var React = require("react");
var cli_1 = require("@kui-shell/core/mdist/webapp/cli");
var SearchInput_1 = require("./SearchInput");
var injectOurCSS_1 = require("../util/injectOurCSS");
var repl;
var importRepl = function () { return __awaiter(void 0, void 0, void 0, function () {
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, Promise.resolve().then(function () { return require('@kui-shell/core'); })];
            case 1:
                repl = _a.sent();
                return [2 /*return*/];
        }
    });
}); };
importRepl();
var InputField = /** @class */ (function (_super) {
    __extends(InputField, _super);
    function InputField(props) {
        var _this = _super.call(this, props) || this;
        _this.onKeyPress = function (e) {
            if (e.which === 38 || e.which === 40) {
                _this.setState({ inputText: e.currentTarget.value });
            }
            else if (e.which !== 13 && e.currentTarget.value.startsWith('search ') && !_this.state.searchCheck) {
                // If the user hit up/down and wants to edit command we need to trigger search first without altering the previous command
                _this.toggleSearchCheckState(e.currentTarget.value);
            }
        };
        _this.onKeyDown = function (e) { return __awaiter(_this, void 0, void 0, function () {
            var _a, inputText, searchCheck, reverseSearch, unfinishedText, searchCommand;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _a = this.state, inputText = _a.inputText, searchCheck = _a.searchCheck, reverseSearch = _a.reverseSearch;
                        e.persist();
                        if (!(e.which === 13)) return [3 /*break*/, 5];
                        this.setState({ searchCheck: false, inputText: '', reverseSearch: '' });
                        if (!(reverseSearch !== '')) return [3 /*break*/, 1];
                        this.setState({ inputText: reverseSearch });
                        return [3 /*break*/, 5];
                    case 1:
                        if (!searchCheck) return [3 /*break*/, 5];
                        unfinishedText = document.querySelector('.kui--input-stripe .repl-block .repl-input input')['value'];
                        searchCommand = (inputText.endsWith(':') || inputText.endsWith(' ')) ? inputText + unfinishedText : inputText + ' ' + unfinishedText;
                        if (!(searchCommand.trim() === 'search')) return [3 /*break*/, 3];
                        return [4 /*yield*/, repl.internalBeCarefulPExec('search -h')];
                    case 2:
                        _b.sent();
                        return [3 /*break*/, 5];
                    case 3: return [4 /*yield*/, repl.internalBeCarefulPExec(searchCommand)];
                    case 4:
                        _b.sent();
                        _b.label = 5;
                    case 5: return [2 /*return*/];
                }
            });
        }); };
        _this.handleInputTextChange = function (e) {
            _this.toggleSearchCheckState(e.currentTarget.value);
        };
        _this.handleSearchTextChange = function (currentQuery) {
            var query = currentQuery.replace(/:\s*/, ':');
            _this.toggleSearchCheckState(query);
        };
        _this.state = {
            inputText: '',
            reverseSearch: '',
            searchCheck: false
        };
        return _this;
    }
    InputField.prototype.componentWillUpdate = function (nextProps, nextState) {
        if (nextState.reverseSearch === '' && this.state.reverseSearch.length > 0) {
            // User has canceled/exited reverse-i-search we neeed to re-listen to the prompt
            var prompt_1 = document.querySelector('.kui--input-stripe .repl-block .repl-input input');
            cli_1.listen(prompt_1);
        }
    };
    InputField.prototype.componentDidMount = function () {
        injectOurCSS_1.injectOurCSS();
    };
    InputField.prototype.toggleSearchCheckState = function (inputText) {
        // If in i-search mode - set reverseSearch to the full string
        if (document.querySelector('.kui--input-stripe .repl-prompt-righty .repl-temporary')) {
            this.setState({ inputText: inputText, reverseSearch: document.querySelector('.kui--input-stripe .repl-prompt-righty .repl-temporary .repl-input-like').getAttribute('data-full-match') });
        }
        else if (inputText.startsWith('search ') && !this.state.searchCheck) {
            this.setState({ searchCheck: true, inputText: inputText, reverseSearch: '' });
        }
        else if (!inputText.startsWith('search') && this.state.searchCheck) {
            this.setState({ searchCheck: false, inputText: inputText, reverseSearch: '' }, function () {
                // Need to re-listen to the default searchbar because we removed it from the DOM when overriding with search
                var prompt = document.querySelector('.kui--input-stripe .repl-block .repl-input input');
                cli_1.listen(prompt);
            });
        }
        else {
            this.setState({ inputText: inputText, reverseSearch: '' });
        }
    };
    InputField.prototype.renderCommandInput = function () {
        return (React.createElement(React.Fragment, null,
            React.createElement("label", { className: 'repl-input-label', htmlFor: 'input-field' }, "input"),
            React.createElement("input", { id: 'input-field', type: 'text', onChange: this.handleInputTextChange, onKeyPress: this.onKeyDown, onKeyDown: this.onKeyPress, onPaste: this.handleInputTextChange, value: this.state.inputText, className: 'repl-input-element', autoFocus: true, autoComplete: 'off', autoCorrect: 'off', autoCapitalize: 'on', spellCheck: false, placeholder: 'enter your command' })));
    };
    InputField.prototype.renderSearchComponents = function () {
        return (React.createElement(SearchInput_1["default"], { onChange: this.handleSearchTextChange, value: this.state.inputText, onKeyDown: this.onKeyDown }));
    };
    InputField.prototype.render = function () {
        var reverseSearch = document.querySelector('.kui--input-stripe .repl-prompt-righty .repl-temporary span')
            ? document.querySelector('.kui--input-stripe .repl-prompt-righty .repl-temporary span')['innerText'].includes('reverse-i-search')
            : false;
        return ((this.state.searchCheck && !reverseSearch)
            ? this.renderSearchComponents()
            : this.renderCommandInput());
    };
    return InputField;
}(React.PureComponent));
exports.InputField = InputField;
