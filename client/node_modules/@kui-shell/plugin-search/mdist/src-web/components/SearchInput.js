"use strict";
/*******************************************************************************
* Licensed Materials - Property of IBM
* (c) Copyright IBM Corporation 2019. All Rights Reserved.
*
* Note to U.S. Government Users Restricted Rights:
* Use, duplication or disclosure restricted by GSA ADP Schedule
* Contract with IBM Corp.
*******************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
exports.__esModule = true;
var React = require("react");
var SearchBar_1 = require("./SearchBar");
var repl = require("@kui-shell/core");
var i18n_1 = require("../util/i18n");
var search_1 = require("../controller/search");
var pluginState_1 = require("../../pluginState");
var SearchInput = /** @class */ (function (_super) {
    __extends(SearchInput, _super);
    function SearchInput(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            searchSchema: [{ id: 'loading', name: i18n_1["default"]('search.loading'), disabled: true }]
        };
        return _this;
    }
    SearchInput.prototype.componentDidMount = function () {
        var _this = this;
        if (search_1.isSearchAvailable()) {
            pluginState_1.getPluginState().searchSchema.length > 0
                ? this.setState({ searchSchema: pluginState_1.getPluginState().searchSchema })
                : this.setState({ searchSchema: pluginState_1.getPluginState()["default"] });
        }
        else {
            repl.internalBeCarefulPExec('search -i').then(function () { return _this.setState({
                searchSchema: [{ id: 'failed', name: i18n_1["default"]('search.loading.fail'), disabled: true }]
            }); });
        }
    };
    SearchInput.prototype.render = function () {
        return (React.createElement(SearchBar_1["default"], { onKeyDown: this.props.onKeyDown, value: this.props.value, onChange: this.props.onChange, availableFilters: this.state.searchSchema }));
    };
    SearchInput.propTypes = {};
    return SearchInput;
}(React.PureComponent));
exports["default"] = SearchInput;
