"use strict";
/*******************************************************************************
* Licensed Materials - Property of IBM
* (c) Copyright IBM Corporation 2019. All Rights Reserved.
*
* Note to U.S. Government Users Restricted Rights:
* Use, duplication or disclosure restricted by GSA ADP Schedule
* Contract with IBM Corp.
*******************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
exports.__esModule = true;
// Hack to workaround build issues with Carbon dependencies
if (!window || !window.navigator || !window.navigator.userAgent) {
    Object.defineProperty(window, 'navigator', { value: { userAgent: 'node' }, writable: true });
    Object.defineProperty(document, 'getElementById', { value: function (val) { return document.querySelector('#' + val); }, writable: true });
}
var React = require("react");
var PropTypes = require("prop-types");
var repl = require("@kui-shell/core");
var carbon_components_react_1 = require("carbon-components-react");
var i18n_1 = require("../util/i18n");
var ResourceTable = /** @class */ (function (_super) {
    __extends(ResourceTable, _super);
    function ResourceTable(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            errors: null
        };
        return _this;
    }
    ResourceTable.prototype.handleDelete = function () {
        var item = this.props.item;
        switch (item['kind']) {
            case 'savedSearches':
                // Backend doesn't handle error case when deleting a saved query
                repl.internalBeCarefulPExec("deleteSavedSearch " + item['name']);
                this.props.onClose();
                break;
            default:
                repl.internalBeCarefulPExec("deleteResource " + item['name'] + " " + item['namespace'] + " " + item['kind'] + " " + item['cluster'] + " " + item['selfLink']);
                this.props.onClose();
        }
    };
    ResourceTable.prototype.render = function () {
        var _this = this;
        var _a = this.props, item = _a.item, modalOpen = _a.modalOpen;
        var bodyLabel = item['kind'];
        var heading = i18n_1["default"]('modal.remove.heading', [item['kind']]);
        return (React.createElement(carbon_components_react_1.Modal, { danger: true, id: 'remove-resource-modal', open: modalOpen, primaryButtonText: i18n_1["default"]('modal.remove-kuberesource.heading'), secondaryButtonText: i18n_1["default"]('modal.button.cancel'), modalLabel: bodyLabel, modalHeading: heading, onRequestClose: function () { return _this.props.onClose(); }, onRequestSubmit: function () { return _this.handleDelete(); }, role: 'region', "aria-label": heading },
            React.createElement("p", null, i18n_1["default"]('modal.remove.confirm', [item['name']]))));
    };
    ResourceTable.propTypes = {
        item: PropTypes.object,
        modalOpen: PropTypes.bool
    };
    return ResourceTable;
}(React.PureComponent));
exports["default"] = ResourceTable;
