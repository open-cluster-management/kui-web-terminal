"use strict";
/*******************************************************************************
* Licensed Materials - Property of IBM
* (c) Copyright IBM Corporation 2019. All Rights Reserved.
*
* Note to U.S. Government Users Restricted Rights:
* Use, duplication or disclosure restricted by GSA ADP Schedule
* Contract with IBM Corp.
*******************************************************************************/
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
exports.__esModule = true;
var search_helper_1 = require("../util/search-helper");
var lodash = require("lodash");
var HTTPClient_1 = require("./HTTPClient");
var search_queries_1 = require("../definitions/search-queries");
var summary_1 = require("../views/modes/summary");
var yaml_1 = require("../views/modes/yaml");
var related_1 = require("../views/modes/related");
var logging_1 = require("../views/modes/logging");
var i18n_1 = require("../../src-web/util/i18n");
var search_1 = require("./search");
var pluginState_1 = require("../../pluginState");
exports.buildSidecar = function (type, data, resource) {
    var badges = [];
    // This will allow the sidecar balloon element to display the resources name.
    var balloon = lodash.get(data, 'items[0].name', '').split(/(-[0-9])/);
    badges.push(balloon[0]);
    var modes = [];
    if (type !== 'query') {
        // If there is any item data, add the summary tab.
        lodash.get(data, 'items[0]', '')
            ? modes.push({
                defaultMode: true,
                mode: 'summary',
                direct: function () { return summary_1.summaryTab(data.items[0]); },
                leaveBottomStripeAlone: true,
                label: i18n_1["default"]('search.label.summary'),
                order: 1
            })
            : null;
        // If the sidecar was able to return a yaml object, add the YAML tab.
        lodash.get(resource, 'message', '') || lodash.get(resource, 'errors', '')
            ? null
            : modes.push({
                defaultMode: true,
                mode: 'yaml',
                direct: function () { return yaml_1.yamlTab(resource); },
                leaveBottomStripeAlone: true,
                label: 'YAML',
                order: 2
            });
        // If the resource is a pod, add the logging tab.
        lodash.get(data, 'items[0].kind', '') === 'pod' && type !== 'query'
            ? modes.push({
                defaultMode: true,
                mode: 'logging',
                direct: function () { return logging_1.logTab(data.items[0]); },
                leaveBottomStripeAlone: true,
                label: i18n_1["default"]('search.label.logs'),
                order: 3
            })
            : null;
    }
    // If the resource have any related resources, add the related tab.
    lodash.get(data, 'related', '').length > 0
        ? modes.push({
            defaultMode: true,
            mode: 'related',
            direct: function () { return related_1.relatedTab(data, type); },
            leaveBottomStripeAlone: true,
            label: i18n_1["default"]('search.label.related'),
            order: 4
        })
        : null;
    // Returns the sidecar and tab for the selected resource || search query that was entered.
    return {
        type: 'custom',
        isEntity: true,
        badges: type !== 'query' ? badges : null,
        content: type !== 'query' ? summary_1.buildSummary(data.items[0]) : related_1.buildRelated(data.related, type),
        contentType: type !== 'query' ? 'json' : null,
        viewName: lodash.get(data, 'items[0].kind', ''),
        name: type !== 'query' ? lodash.get(data, 'items[0].name', '') : i18n_1["default"]('search.label.query', [lodash.get(data, 'items[0].kind', '')]),
        packageName: type !== 'query' ? lodash.get(data, 'items[0].namespace', '') : null,
        modes: modes
    };
};
exports.getSidecar = function (args) { return __awaiter(void 0, void 0, void 0, function () {
    return __generator(this, function (_a) {
        return [2 /*return*/, new Promise(function (resolve, reject) {
                var userQuery = search_helper_1.convertStringToQuery(args.command);
                if (args.argv.length === 2) {
                    resolve("ERROR: Received wrong number of parameters.\nUSAGE: " + args.command + " kind:<keyword> name:<keyword> namespace:<keyword>\nEXAMPLE: " + args.command + " kind:pod name:audit-logging-fluentd-ds-7tpnw namespace:kube-system");
                }
                var node = document.createElement('pre');
                node.setAttribute('class', 'oops');
                node.innerText = i18n_1["default"]('search.no.resources.found');
                search_1.isSearchAvailable()
                    ? HTTPClient_1["default"]('post', 'search', search_queries_1.SEARCH_RELATED_QUERY(userQuery.keywords, userQuery.filters))
                        .then(function (res) {
                        var data = lodash.get(res, 'data.searchResult[0]', '');
                        !data || data.count === 0
                            ? resolve(node)
                            : args.command.includes('related:resources')
                                ? resolve(exports.buildSidecar('query', data))
                                : HTTPClient_1["default"]('post', 'mcm', search_queries_1.SEARCH_MCM_QUERY(data.items[0]))
                                    .then(function (resp) {
                                    var resource = !resp.errors ? resp.data.getResource : resp;
                                    resolve(exports.buildSidecar('resource', data, resource));
                                })["catch"](function (err) {
                                    pluginState_1.setPluginState('error', err);
                                    resolve(search_1.renderSearchAvailable(search_1.isSearchAvailable(), pluginState_1.getPluginState().error));
                                });
                    })["catch"](function (err) {
                        pluginState_1.setPluginState('error', err);
                        resolve(search_1.renderSearchAvailable(search_1.isSearchAvailable(), pluginState_1.getPluginState().error));
                    })
                    : resolve(search_1.renderSearchAvailable(search_1.isSearchAvailable()));
            })];
    });
}); };
