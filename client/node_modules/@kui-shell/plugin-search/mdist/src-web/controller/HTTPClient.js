"use strict";
/*******************************************************************************
* Licensed Materials - Property of IBM
* (c) Copyright IBM Corporation 2019. All Rights Reserved.
*
* Note to U.S. Government Users Restricted Rights:
* Use, duplication or disclosure restricted by GSA ADP Schedule
* Contract with IBM Corp.
*******************************************************************************/
exports.__esModule = true;
var axios_1 = require("axios");
var core_1 = require("@kui-shell/core");
var config = require('../../lib/shared/config');
// Need the agent in electron to get around ssl cert issues
var agent = null;
if (core_1.inElectron) {
    var https = require('https');
    agent = new https.Agent({ rejectUnauthorized: false });
}
// Browser requires xsrf token for calls & and electron needs the access token
function getHeaders() {
    if (core_1.inElectron()) {
        return {
            'content-type': 'application/json',
            'authorization': config.authorization,
            // Allows cookies to be passed in electron.
            'Cookie': config.cookie
        };
    }
    return {
        'content-type': 'application/json',
        'XSRF-Token': config.xsrfToken
    };
}
/**
 * Axios is a Promise based HTTP client for the browser and node.js
 * @param method - post, get etc
 * @param urlType - search || mcm to determine backend
 * @param requestBody - post request body
 */
function HTTPClient(method, urlType, requestBody) {
    return (axios_1["default"]({
        method: method,
        url: urlType === 'search' ? config.SEARCH_API : urlType && requestBody
            ? config.MCM_API : urlType === 'svc' && !requestBody
            ? config.SEARCH_SERVICE : null,
        headers: getHeaders(),
        data: requestBody,
        withCredentials: true,
        httpsAgent: agent
    }).then(function (res) {
        return res.data;
    })["catch"](function (err) {
        throw new Error(err);
    }));
}
exports["default"] = HTTPClient;
