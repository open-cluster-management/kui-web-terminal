"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
exports.__esModule = true;
/*******************************************************************************
* Licensed Materials - Property of IBM
* (c) Copyright IBM Corporation 2019. All Rights Reserved.
*
* Note to U.S. Government Users Restricted Rights:
* Use, duplication or disclosure restricted by GSA ADP Schedule
* Contract with IBM Corp.
*******************************************************************************/
var core_1 = require("@kui-shell/core");
var staticConfig;
if (process.env.NODE_ENV === 'development') {
    staticConfig = require('@kui-shell/client/config.d/search.json');
}
var getXsrfToken = function () {
    var token = document.querySelector('#app-access') ? document.querySelector('#app-access')['value'] : '';
    return token.toString('ascii');
};
function getConfig() {
    return __awaiter(this, void 0, void 0, function () {
        var nconf, WHITELIST, config, authConfig, configElement;
        return __generator(this, function (_a) {
            nconf = require('nconf');
            WHITELIST = ['contextPath'];
            config = Object.assign({
                env: '',
                // Electron needs to grab backend urls somehow  Ex: https://<cluster-ip>:<backend-port>/(searchapi || hcmuiapi)/graphql
                // To ensure that the search-api is installed, Electron needs to grab the url Ex: https://<cluster-ip>:8443/multicloud/servicediscovery/search
                // Browser can grab backend urls from the window.location.origin
                SEARCH_API: core_1.inBrowser()
                    ? (window && window.location && window.location.origin) + "/multicloud/search/graphql"
                    : staticConfig.SEARCH_API,
                CONSOLE_API: core_1.inBrowser()
                    ? (window && window.location && window.location.origin) + "/multicloud/graphql"
                    : staticConfig.CONSOLE_API,
                SEARCH_SERVICE: core_1.inBrowser()
                    ? (window && window.location && window.location.origin) + "/multicloud/servicediscovery/search"
                    : staticConfig.SEARCH_SERVICE
            }, {
                // Browser needs xsrf token for requests
                xsrfToken: core_1.inBrowser() ? getXsrfToken() : null,
                // Electron needs the user access token
                authorization: 'Bearer ',
                cookie: 'cfc-cookie-access-token='
            });
            if (process.env.NODE_ENV === 'development') {
                try {
                    authConfig = require('@kui-shell/client/config.d/search-auth.json');
                    if (authConfig.authorization) {
                        config.authorization = authConfig.authorization;
                        config.cookie = authConfig.cookie;
                    }
                }
                catch (err) {
                    console.error(err);
                }
            }
            if (nconf) {
                WHITELIST.forEach(function (i) {
                    config[i] = nconf.get(i);
                });
                if (process.env.NODE_ENV) {
                    config.env = process.env.NODE_ENV;
                }
            }
            else {
                configElement = document.getElementById('config');
                config = (configElement && JSON.parse(configElement.textContent)) || {};
            }
            return [2 /*return*/, config];
        });
    });
}
exports.getConfig = getConfig;
exports["default"] = getConfig;
