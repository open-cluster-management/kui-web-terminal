/*******************************************************************************
* Licensed Materials - Property of IBM
* (c) Copyright IBM Corporation 2019. All Rights Reserved.
*
* Note to U.S. Government Users Restricted Rights:
* Use, duplication or disclosure restricted by GSA ADP Schedule
* Contract with IBM Corp.
*******************************************************************************/
'use strict';
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
exports.__esModule = true;
var React = require("react");
var Tag = /** @class */ (function (_super) {
    __extends(Tag, _super);
    function Tag() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // customized tag, used by tag input
    Tag.prototype.getClassType = function (tag) {
        var classNames = this.props.classNames;
        switch (tag.classType) {
            case 'keyword':
                return 'react-tags__keyword-tag';
            default: return classNames.selectedTag;
        }
    };
    Tag.prototype.render = function () {
        var _a = this.props, classNames = _a.classNames, onDelete = _a.onDelete, tag = _a.tag;
        return (React.createElement("button", { type: 'button', className: this.getClassType(tag), onClick: onDelete },
            React.createElement("span", { className: classNames.selectedTagName }, tag.name)));
    };
    return Tag;
}(React.Component));
exports["default"] = Tag;
