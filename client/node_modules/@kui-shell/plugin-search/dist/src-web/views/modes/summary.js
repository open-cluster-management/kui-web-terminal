"use strict";
/*******************************************************************************
* Licensed Materials - Property of IBM
* (c) Copyright IBM Corporation 2019. All Rights Reserved.
*
* Note to U.S. Government Users Restricted Rights:
* Use, duplication or disclosure restricted by GSA ADP Schedule
* Contract with IBM Corp.
*******************************************************************************/
exports.__esModule = true;
var lodash = require("lodash");
var React = require("react");
var ReactDOM = require("react-dom");
var carbon_components_react_1 = require("carbon-components-react");
var i18n_1 = require("../../util/i18n");
/**
 * Render resource's summary list
 *
 */
exports.buildSummary = function (items) {
    var node = document.createElement('div');
    node.classList.add('scrollable');
    node.classList.add('bx--structured-list--summary');
    // Filter out items that being with an underscore
    var rows = Object.entries(items).filter(function (key) { return !key[0][0].match('_'); });
    var summary = function () {
        return (React.createElement(carbon_components_react_1.StructuredListWrapper, null,
            React.createElement(carbon_components_react_1.StructuredListBody, null, rows.map(function (row) { return (React.createElement(carbon_components_react_1.StructuredListRow, { key: lodash.get(row, '[0]', '') },
                React.createElement(carbon_components_react_1.StructuredListCell, null,
                    React.createElement("span", { className: 'bx--structured-list-td-header' }, "" + row[0]),
                    React.createElement("br", null),
                    React.createElement("span", { className: 'bx--structured-list-td-body' }, "" + row[1])))); }))));
    };
    ReactDOM.render(React.createElement(summary), node);
    return node;
};
/**
 * Render resource's summary tab
 *
 */
exports.summaryTab = function (items) {
    var badges = [];
    // This will allow the sidecar balloon element to display the resources name.
    var balloon = items.name.split(/(-[0-9])/);
    badges.push(balloon[0]);
    return {
        type: 'custom',
        isEntity: true,
        content: exports.buildSummary(items),
        viewName: items.kind,
        name: items.name,
        packageName: lodash.get(items, 'namespace', ''),
        badges: badges,
        modes: [
            {
                defaultMode: true,
                mode: 'summary',
                direct: function () { return exports.summaryTab(items); },
                leaveBottomStripeAlone: true,
                label: i18n_1["default"]('search.label.summary')
            },
        ]
    };
};
