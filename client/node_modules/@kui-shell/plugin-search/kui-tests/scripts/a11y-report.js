const fs = require('fs')
const path = require('path')
const _ = require('lodash')

const a11yScanDir = path.join(__dirname, '..', 'test-output', 'a11y')
const a11yScanFiles = fs.readdirSync(a11yScanDir, 'utf8')

let report = {}

a11yScanFiles.forEach(file => {
  // Skip previously generated csv file
  if (file.endsWith('.csv')) return

  const filePath = a11yScanDir + `/${file}`
  const scan = require(filePath)

  // Skip the generated summary file
  if (scan.hasOwnProperty('pageScanSummary')) return

  const { messages } = scan.issueMessages
  const { issues } = scan.reports[0]
  issues.forEach(issue => {
    // These are the only values we want
    const { messageCode, xpath, snippet, level } = issue
    const message = makeMessage(messages[issue.messageCode], issue.msgArgs).replace(/,/g, '')
    const result = { messageCode, xpath, snippet, level, message }
    
    // Check if we already have a violation like this one before; if not add it
    if (report[message]) {
      report[message].push(result)
    } else {
      report[message] = [result]
    }
  })
})

let totalCount = 0
const codeCount = {}
const keys = Object.keys(report)
keys.forEach(key => report[key] = _.uniqWith(report[key], _.isEqual)) // remove duplicate results
keys.forEach(key => codeCount[key] = report[key].length) // count how many issues per violation
keys.forEach(key => totalCount += codeCount[key]) // total issues

// Start scaffolding the csv file content
const columnTitles = ['TYPE', 'Count', 'Description', 'Analysis', 'Decision', 'Git Issue', 'Details']
const typeMap = {
  violation: 'Violations',
  potentialviolation: 'Potential Violations'
}
let csv = 'Scan File:\n'
csv += '\n'
csv += columnTitles.join(',') + '\n'

keys.forEach(key => {
  let row = []
  let issue = report[key][0]
  let type = typeMap[issue.level]
  let count = codeCount[issue.message]
  let description = issue.message
  row.push(type, count, description)
  rowString = row.join(',') + '\n'
  csv += rowString
})

csv += '\n'
csv += `TOTAL, ${totalCount}`

const csvFilePath = a11yScanDir + '/a11y-report.csv'
fs.writeFileSync(csvFilePath, csv)

console.log('See report in ./test-output/a11y/a11y-report.csv')

function makeMessage(message, args) {
  args.forEach((arg, i) => message = message.replace(`{${i}}`, arg))
  return message
}
