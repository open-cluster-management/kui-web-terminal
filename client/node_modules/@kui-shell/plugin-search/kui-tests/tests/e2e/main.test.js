/*******************************************************************************
 * Licensed Materials - Property of IBM
 * (c) Copyright IBM Corporation 2019. All Rights Reserved.
 *
 * Note to U.S. Government Users Restricted Rights:
 * Use, duplication or disclosure restricted by GSA ADP Schedule
 * Contract with IBM Corp.
 *******************************************************************************/


module.exports = {
  before: function (browser) {
    const KUI =  browser.page.KUI()
    const loginPage = browser.page.LoginPage()
    if (!process.env.TEST_LOCAL) {
      loginPage.navigate()
      loginPage.authenticate()
    }
    KUI.navigate()
    KUI.waitForPageLoad(browser)
    KUI.verifyWebsocketConnection(browser)
  },

  'Verify KUI getting started command': browser => {
    const KUI = browser.page.KUI()
    KUI.executeCommand(browser, 'getting started')
    KUI.verifyGettingStarted()
    KUI.executeCommand(browser, 'help')
    KUI.verifyGettingStarted()
  },

  'Verify supported themes': browser => {
    const KUI = browser.page.KUI()
    const themes = [{ name: 'Carbon Gray90' }, { name: 'Carbon Gray10' }] // come back to this, evaluated color values keep changing
    KUI.executeCommand(browser, 'themes')
    themes.forEach(theme => KUI.verifyTheme(browser, theme))
  },

  'Verify product header': browser => {
    if (!process.env.TEST_LOCAL) {
      const KUI = browser.page.KUI()
      KUI.verifyProductHeader()
    } else {
      console.log('Skipping header test...')
    }
  },

  'Verify KUI multiple tabs': browser => {
    const KUI = browser.page.KUI()
    KUI.verifyNewTabs(browser)
  },

  // 'Verify reverse-i-search': browser => {
  //   const KUI = browser.page.KUI()
  //   const command = 'kubectl get configmaps -n kube-system'
  //   const search = 'configmaps'
  //   KUI.executeCommand(browser, command)
  //   KUI.clear()
  //   KUI.verifyReverseISearch(browser, command, search)
  //   KUI.verifyOutputSuccess(browser)
  // },

  after: function (browser, done) {
    setTimeout(() => {
      browser.end()
      done()
    })
  }
}