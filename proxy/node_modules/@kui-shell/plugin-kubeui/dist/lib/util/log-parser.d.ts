import { ExecOptions } from '@kui-shell/core';
declare type OutputType = ZaprEntry[] | HTMLDivElement;
interface Options<T extends OutputType> {
    format(logEntries: ZaprEntry[]): T;
}
declare class AsHTML implements Options<HTMLDivElement> {
    readonly asHTML: true;
    format(logEntries: ZaprEntry[]): HTMLDivElement;
}
declare class AsJSON implements Options<ZaprEntry[]> {
    readonly asJSON: true;
    format(logEntries: ZaprEntry[]): ZaprEntry[];
}
declare type Output = AsHTML | AsJSON;
interface ZaprEntry {
    timestamp: string | Text | Element;
    rawTimestamp: string;
    logType: string;
    provider: string;
    origin: string;
    rest: string | Record<string, string>;
    runLength?: number;
}
export declare const processLogs: (raw: string, execOptions: ExecOptions, options?: Output) => ZaprEntry[];
export declare function formatLogs(raw: string, execOptions: ExecOptions): HTMLDivElement;
export {};
