"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const CLI = require("../webapp/cli");
const Inject = require("../webapp/util/inject");
const Dom = require("../webapp/util/dom");
const sidecar_visibility_1 = require("../webapp/views/sidecar-visibility");
const ModeRegistrar = require("../webapp/views/registrar/modes");
const BadgeRegistrar = require("../webapp/views/registrar/badges");
const presentation_1 = require("../webapp/views/presentation");
const keys = require("../webapp/keys");
const Time = require("../webapp/util/time");
const pretty_print_1 = require("../webapp/util/pretty-print");
const _Editor = require("../webapp/views/registrar/editors");
const _TopTabs = require("../webapp/views/top-tabs");
const _ToolbarText = require("../webapp/views/toolbar-text");
const _Themes = require("../webapp/themes");
const Tabs = require("../webapp/tab");
exports.Tabs = Tabs;
const Block = require("../webapp/block");
const Prompt = require("../webapp/prompt");
const Scroll = require("../webapp/scroll");
const PromptForInput = require("../webapp/prompt-for-input");
var UI;
(function (UI) {
    UI.injectCSS = Inject.injectCSS;
    UI.uninjectCSS = Inject.uninjectCSS;
    UI.injectScript = Inject.injectScript;
    UI.loadHTML = Inject.loadHTML;
    UI.empty = Dom.removeAllDomChildren;
    UI.registerMode = ModeRegistrar.registerSidecarMode;
    UI.registerModeWhen = ModeRegistrar.registerModeWhen;
    UI.registerBadge = BadgeRegistrar.registerSidecarBadge;
    UI.Themes = _Themes;
    UI.ToolbarText = _ToolbarText.ToolbarTextImpl;
    UI.TopTabs = _TopTabs;
    let Editor;
    (function (Editor) {
        Editor.registerProvider = _Editor.registerEditor;
    })(Editor = UI.Editor || (UI.Editor = {}));
    UI.Presentation = presentation_1.default;
    UI.isPopup = CLI.isPopup;
    UI.getCurrentPrompt = Prompt.getCurrentPrompt;
    UI.getCurrentBlock = Block.getCurrentBlock;
    let PrettyPrinters;
    (function (PrettyPrinters) {
        PrettyPrinters.time = Time.prettyPrintTime;
        PrettyPrinters.ansi = pretty_print_1.default;
    })(PrettyPrinters = UI.PrettyPrinters || (UI.PrettyPrinters = {}));
    let Keys;
    (function (Keys) {
        Keys.Codes = keys.keys;
        Keys.isCursorMovement = keys.isCursorMovement;
    })(Keys = UI.Keys || (UI.Keys = {}));
    UI.closeAllViews = (tab) => {
        sidecar_visibility_1.clearSelection(tab);
    };
    let LowLevel;
    (function (LowLevel) {
        LowLevel.prompt = PromptForInput.prompt;
        LowLevel.partialInput = Prompt.partial;
        LowLevel.scrollIntoView = Scroll.scrollIntoView;
        LowLevel.doCancel = CLI.doCancel;
        LowLevel.isUsingCustomPrompt = Prompt.isUsingCustomPrompt;
    })(LowLevel = UI.LowLevel || (UI.LowLevel = {}));
})(UI = exports.UI || (exports.UI = {}));
exports.default = UI;
//# sourceMappingURL=ui.js.map