import { Tab, CommandLine } from '@kui-shell/core';
/**
 * A registrar for enumerators
 *
 */
export interface TabCompletionSpec {
    /**
     * The prefix of the to-be-completed parameter that has been typed
     * so far.
     */
    toBeCompleted: string;
    /**
     * An index into CommandLine.argv, or -1 if it is the trailing
     * argument that is to be completed.
     */
    toBeCompletedIdx: number;
}
declare type Enumerator = (tab: Tab, commandLine: CommandLine, spec: TabCompletionSpec) => string[] | Promise<string[]>;
export declare function registerEnumerator(enumerator: Enumerator): void;
export declare function applyEnumerator(tab: Tab, commandLine: CommandLine, spec: TabCompletionSpec): Promise<string[]>;
export {};
